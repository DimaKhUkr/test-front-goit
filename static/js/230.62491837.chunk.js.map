{"version":3,"file":"static/js/230.62491837.chunk.js","mappings":"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","sources":["WeatherApp/WeatherApp.styled.js","WeatherApp/WeatherApp.jsx","pages/Home/HomePage.styled.js","pages/Home/Home.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WeatherName = styled.h1`\n  font-size: 2rem;\n`;\n\nexport const WeatherWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 450px;\n  background-color: rgba(176, 196, 222, 0.5);\n  text-align: center;\n  box-shadow: rgb(33 33 33) 0px 2px 10px 1px;\n  padding: 20px;\n  @media screen and (max-width: 750px) {\n    padding: 15px;\n  }\n`;\n\nexport const CitySearch = styled.input`\n  width: 200px;\n  box-sizing: border-box;\n  border: 2px solid #ccc;\n  outline: none;\n  border-radius: 20px;\n  font-size: 16px;\n  margin-bottom: 10px;\n  background-color: white;\n  background-position: 10px 10px;\n  padding: 12px 20px 12px 20px;\n  transition: width 0.4s ease-in-out;\n  &:focus {\n    width: 60%;\n  }\n`;\n\nexport const CityName = styled.div`\n  margin-top: 10px;\n  font-size: 1.25em;\n`;\n\nexport const DateWrapper = styled.div`\n  font-size: 1.25em;\n  font-weight: 600;\n`;\n\nexport const IconStyled = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: #1e2432;\n  text-align: center;\n  @media screen and (max-width: 750px) {\n    font-size: 3rem;\n  }\n`;\n\nexport const DegStyled = styled.span`\n  font-size: 3rem;\n  @media screen and (max-width: 750px) {\n    font-size: 2.5rem;\n  }\n`;\n\nexport const WindStyled = styled.div`\n  font-weight: 600;\n`;\n\nexport const ErroreMessage = styled.span`\n  display: block;\n  text-align: center;\n  color: rgb(20, 2, 2);\n  font-size: 30px;\n`;\n","import { useState } from 'react';\n\nimport {\n  CityName,\n  CitySearch,\n  WeatherName,\n  WeatherWrapper,\n  DateWrapper,\n  IconStyled,\n  DegStyled,\n  ErroreMessage,\n  WindStyled,\n} from './WeatherApp.styled';\n\nfunction Weather() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({\n    data: {},\n    error: false,\n  });\n\n  const toDate = () => {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ];\n\n    const currentDate = new Date();\n    const date = `${days[currentDate.getDay()]}, ${currentDate.getDate()} ${\n      months[currentDate.getMonth()]\n    }`;\n    return date;\n  };\n\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setQuery('');\n\n      setWeather({ ...weather });\n      const baseUrl = 'https://api.openweathermap.org/data/2.5/weather';\n      const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\n      const searchParams = new URLSearchParams({\n        q: query,\n        units: 'metric',\n        appid: apiKey,\n      });\n      await fetch(`${baseUrl}?${searchParams}`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(response.status);\n          }\n          return response.json();\n        })\n        .then(res => {\n          setWeather({ data: res, error: false });\n        })\n        .catch(error => {\n          setWeather({ ...weather, data: {}, error: true });\n          setQuery('');\n        });\n    }\n  };\n\n  return (\n    <WeatherWrapper>\n      <WeatherName>\n        Weather <span> ðŸŒ¤ </span>\n      </WeatherName>\n      <div>\n        <CitySearch\n          autoFocus\n          type=\"text\"\n          placeholder=\"Search City..\"\n          name=\"query\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n          onKeyPress={search}\n        ></CitySearch>\n      </div>\n\n      {weather.error && (\n        <>\n          <ErroreMessage>\n            <span style={{ fontSize: '26px' }}> Sorry, City not found</span>\n          </ErroreMessage>\n        </>\n      )}\n\n      {weather && weather.data && weather.data.main && (\n        <div>\n          <CityName>\n            <h2>\n              {weather.data.name}, <span>{weather.data.sys.country}</span>\n            </h2>\n          </CityName>\n          <DateWrapper>\n            <span>{toDate()}</span>\n          </DateWrapper>\n          <IconStyled>\n            <img\n              src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\n              alt={weather.data.weather[0].description}\n            />\n            {Math.round(weather.data.main.temp)}\n            <DegStyled> &deg;C </DegStyled>\n          </IconStyled>\n          <WindStyled>\n            <p>{weather.data.weather[0].description.toUpperCase()}</p>\n            <p>Wind Speed: {weather.data.wind.speed}m/s</p>\n          </WindStyled>\n        </div>\n      )}\n    </WeatherWrapper>\n  );\n}\n\nexport default Weather;\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.p`\n  max-width: 400px;\n  padding-left: 15px;\n  font-size: 32px;\n  font-weight: 700;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  @media screen and (max-width: 550px) {\n    font-size: 26px;\n  }\n`;\nexport const WrapperHomePage = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  padding: 40px;\n  align-items: flex-start;\n\n  @media screen and (max-width: 550px) {\n    padding: 25px;\n  }\n`;\nexport const HomePage = styled.div`\n   {\n    background-size: cover;\n    overflow -x: hidden;\n\n    background-repeat: no-repeat;\n    height: calc(100vh - 70px);\n  }\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 450px;\n  background-color: rgba(176, 196, 222, 0.5);\n  text-align: center;\n  box-shadow: rgb(33 33 33) 0px 2px 10px 1px;\n  padding: 20px;\n  @media screen and (max-width: 750px) {\n    padding: 15px;\n  }\n`;\n","import Weather from 'WeatherApp/WeatherApp';\nimport {\n  HomeTitle,\n  WrapperHomePage,\n  HomePage,\n  Wrapper,\n} from './HomePage.styled';\n\nimport HomeBG from '../../img/bg.jpeg';\n\nexport default function Home() {\n  return (\n    <HomePage style={{ backgroundImage: `url(${HomeBG})` }}>\n      <WrapperHomePage>\n        <Wrapper>\n          <HomeTitle>\n            Go to the &ldquo;Contacts&ldquo; tab to see the list of contacts\n          </HomeTitle>\n        </Wrapper>\n        <Weather />\n      </WrapperHomePage>\n    </HomePage>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["WeatherName","styled","WeatherWrapper","CitySearch","CityName","DateWrapper","IconStyled","DegStyled","WindStyled","ErroreMessage","useState","query","setQuery","data","error","weather","setWeather","search","event","key","preventDefault","searchParams","URLSearchParams","q","units","appid","fetch","then","response","ok","Error","status","json","res","catch","autoFocus","type","placeholder","name","value","onChange","target","onKeyPress","style","fontSize","main","sys","country","currentDate","Date","getDay","getDate","getMonth","toDate","src","icon","alt","description","Math","round","temp","toUpperCase","wind","speed","HomeTitle","WrapperHomePage","HomePage","Wrapper","Home","backgroundImage","HomeBG","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}