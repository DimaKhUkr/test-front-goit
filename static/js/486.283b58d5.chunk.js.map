{"version":3,"file":"static/js/486.283b58d5.chunk.js","mappings":"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","sources":["Fetch/tweetsApi.js","components/UserCardsItem/UserCardsItem.styled.jsx","components/UserCardsItem/UserCardsItem.jsx","components/UserCards/UserCards.styled.jsx","components/UserCards/UserCards.jsx","pages/Cards/Cards.styled.jsx","pages/Cards/Cards.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64429ddd33997d3ef91539c5.mockapi.io/';\n\nexport const getUsers = async (isFollowed, page = 1, limit = 3) => {\n  const res = await axios.get(`twits`, {\n    params: {\n      isFollowed,\n      page,\n      limit,\n    },\n  });\n  return res.data;\n};\n\nexport const updateUser = async (id, followers, isFollowed) => {\n  await axios.put(`twits/${id}`, { followers, isFollowed });\n};\n","import styled from '@emotion/styled';\n\nexport const CheckboxContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const CardsItem = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const BgImage = styled.img`\n  margin: 0 auto;\n  padding-top: 28px;\n`;\n\nexport const Rectangle = styled.div`\n  margin-top: 18px;\n  width: 380px;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #ae7be3,\n    inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const AvatarWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  width: 80px;\n  height: 80px;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n  width: 62px;\n  height: 62px;\n  border: 8px solid #ebd8ff;\n  border-radius: 50%;\n  background-color: #5736a3;\n`;\n\nexport const Tweets = styled.p`\n  margin-top: 62px;\n  text-align: center;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const Followers = styled.p`\n  margin-top: 16px;\n  text-align: center;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const CheckboxInput = styled.input`\n  display: none;\n`;\n\nexport const CheckboxInputLabelOff = styled.label`\n  display: inline-block;\n  margin-top: 26px;\n  padding: 14px 56px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n`;\n\nexport const CheckboxInputLabelOn = styled.label`\n  display: inline-block;\n  margin-top: 26px;\n  padding: 14px 39px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n  background-color: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n`;\n","import { useState } from 'react';\nimport { updateUser } from '../../Fetch/tweetsApi';\n\nimport image from '../../img/picture.png';\nimport logo from '../../img/Logo.png';\n\nimport {\n  CardsItem,\n  CheckboxContainer,\n  Logo,\n  BgImage,\n  Rectangle,\n  AvatarWrap,\n  Avatar,\n  Tweets,\n  Followers,\n  CheckboxInput,\n  CheckboxInputLabelOff,\n  CheckboxInputLabelOn,\n} from './UserCardsItem.styled';\n\nexport const UserCardsItem = user => {\n  const { id, avatar, tweets, followers, isFollowed } = user.user;\n\n  const [checked, setChecked] = useState(isFollowed);\n  const [follow, setFollow] = useState(followers);\n\n  const folowersChange = async () => {\n    setChecked(!checked);\n\n    if (!checked) {\n      setFollow(prevState => prevState + 1);\n\n      await updateUser(id, follow + 1, true);\n    } else {\n      setFollow(prevState => prevState - 1);\n      await updateUser(id, follow - 1, false);\n    }\n  };\n\n  return (\n    <CardsItem key={id}>\n      <Logo src={logo} alt=\"goit logo\" />\n      <BgImage src={image} alt=\"background image\" />\n      <Rectangle />\n      <AvatarWrap />\n      <Avatar src={avatar} alt=\"user avatar\" />\n\n      <Tweets>{tweets} TWEETS</Tweets>\n      <Followers>{follow} FOLOWERS</Followers>\n      <CheckboxContainer>\n        <CheckboxInput\n          type=\"checkbox\"\n          id={id}\n          checked={checked}\n          onChange={folowersChange}\n        />\n        {checked ? (\n          <CheckboxInputLabelOn htmlFor={id}>Following</CheckboxInputLabelOn>\n        ) : (\n          <CheckboxInputLabelOff htmlFor={id}>Follow</CheckboxInputLabelOff>\n        )}\n      </CheckboxContainer>\n    </CardsItem>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DropdownAndBackWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 74px 0 10px;\n\n  margin: 0 30px 10px;\n`;\n\nexport const GoBackButton = styled(Link)`\n  padding: 4px 0 0;\n`;\n\nexport const UserCartsListAndLoadMoreBtnWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 96px;\n`;\n\nexport const UserCartsList = styled.ul`\n  max-width: 1280px;\n  margin: 0 auto;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 0;\n`;\n\nexport const LoadMoreButton = styled.button`\n  display: inline-block;\n  margin-top: 40px;\n  padding: 14px 56px;\n  width: 230px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  border-radius: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Select from 'react-select';\nimport { toast } from 'react-hot-toast';\n\nimport { HiChevronDoubleLeft } from 'react-icons/hi';\nimport { getUsers } from '../../Fetch/tweetsApi';\nimport { Loader } from '../Loader/Loader';\nimport { UserCardsItem } from '../UserCardsItem/UserCardsItem';\n\nimport {\n  ListContainer,\n  DropdownAndBackWrap,\n  UserCartsListAndLoadMoreBtnWrap,\n  UserCartsList,\n  LoadMoreButton,\n  GoBackButton,\n} from './UserCards.styled';\n\nconst selectOptions = [\n  { value: '', label: 'All' },\n  { value: 'false', label: 'Follow' },\n  { value: 'true', label: 'Following' },\n];\n\nexport const UserCards = () => {\n  const [users, setUsers] = useState([]);\n  const [loadMore, setLoadMore] = useState(false);\n  const [page, setPage] = useState(2);\n  const [selectValue] = useState('');\n  const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(true);\n  const [loadCards, setLoadCards] = useState(true);\n  useEffect(() => {\n    getUsers().then(data => {\n      if (data.length === 0) {\n        return toast.error(`User Cards not find`);\n      }\n      setUsers(data);\n    });\n  }, []);\n\n  const location = useLocation();\n\n  const handleChange = selectValue => {\n    console.log(selectValue.value);\n    getUsers(selectValue.value).then(data => {\n      setLoadCards(true);\n      if (data.length === 0) {\n        setLoadCards(false);\n\n        return toast.error(`User Cards not found`);\n      }\n      setUsers(data);\n    });\n  };\n\n  const handleLoadMore = async () => {\n    setLoadMore(true);\n    setPage(prevState => prevState + 1);\n    const data = await getUsers(selectValue, page);\n\n    if (data.length === 0) {\n      setShowLoadMoreBtn(false);\n      toast.error(`User Cards ended`);\n    }\n\n    setUsers(prevState => [...prevState, ...data]);\n\n    setLoadMore(false);\n  };\n  console.log(loadCards);\n  return !users.length ? (\n    <Loader />\n  ) : (\n    <section>\n      <DropdownAndBackWrap>\n        <GoBackButton to={location.state?.from ?? '/'}>\n          <span>\n            <HiChevronDoubleLeft size=\"28\" color=\"#0000cd\" />\n          </span>\n        </GoBackButton>\n        <Select\n          closeMenuOnSelect={true}\n          options={selectOptions}\n          value={selectValue}\n          onChange={handleChange}\n        />\n      </DropdownAndBackWrap>\n      {loadCards ? (\n        <ListContainer>\n          <UserCartsListAndLoadMoreBtnWrap>\n            <UserCartsList>\n              {users.map(user => (\n                <UserCardsItem key={user.id} user={user} />\n              ))}\n            </UserCartsList>\n\n            {loadMore && <Loader />}\n            {showLoadMoreBtn && (\n              <LoadMoreButton onClick={handleLoadMore} type=\"button\">\n                {loadMore ? 'Loading...' : 'LOAD MORE'}\n              </LoadMoreButton>\n            )}\n          </UserCartsListAndLoadMoreBtnWrap>\n        </ListContainer>\n      ) : (\n        toast.error(`User Cards not found!!! Please choose another option!!!`)\n      )}\n    </section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const UPage = styled.div`\n   {\n    min-height: 100vw;    background-size: cover;\n    overflow -x: hidden;\nbackgroundAttachment: fixed;\n    background-repeat: no-repeat;\n  }\n`;\n","import { UserCards } from '../../components/UserCards/UserCards';\nimport uBG from '../../img/bg_user.jpg';\nimport { UPage } from './Cards.styled';\n\nexport default function Cards() {\n  return (\n    <UPage style={{ backgroundImage: `url(${uBG})` }}>\n      <UserCards />\n    </UPage>\n  );\n}\n"],"names":["axios","getUsers","isFollowed","page","limit","params","res","data","updateUser","id","followers","CheckboxContainer","styled","CardsItem","Logo","BgImage","Rectangle","AvatarWrap","Avatar","Tweets","Followers","CheckboxInput","CheckboxInputLabelOff","CheckboxInputLabelOn","UserCardsItem","user","avatar","tweets","useState","checked","setChecked","follow","setFollow","folowersChange","prevState","src","alt","image","type","onChange","htmlFor","ListContainer","DropdownAndBackWrap","GoBackButton","Link","UserCartsListAndLoadMoreBtnWrap","UserCartsList","LoadMoreButton","selectOptions","value","label","UserCards","users","setUsers","loadMore","setLoadMore","setPage","selectValue","showLoadMoreBtn","setShowLoadMoreBtn","loadCards","setLoadCards","useEffect","then","length","toast","location","useLocation","handleLoadMore","console","log","to","state","from","size","color","closeMenuOnSelect","options","map","Loader","onClick","UPage","Cards","style","backgroundImage","uBG"],"sourceRoot":""}